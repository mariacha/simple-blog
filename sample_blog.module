<?php
/**
 * @file
 * Sample custom entity 'blog'.
 */

/**
 * Implements hook_entity_info().
 */
function sample_blog_entity_info() {

  $info = array();

  $info['blog_types'] = array(
    'label' => t('Blog'),
    'base table' => 'blog',
    'entity keys' => array(
      'id' => 'bid',
      'label' => 'title'
    ),
    'module' => 'sample_blog',
    'entity class' => 'BlogEntity',
    'controller class' => 'EntityAPIController',
    'access callback' => 'sample_blog_access_callback',
    'uri callback' => 'entity_class_uri',
    'admin ui' => array(
      'path' => 'admin/blogs',
      'controller class' => 'EntityDefaultUIController',
    ),
    'fieldable' => TRUE,
    'bundles' => array(
      'blog_types' => array(
        'label' => t('Blog Post'),
        'admin' => array(
          'path' => 'admin/blogs',
        ),
      ),
    ),
  );

  return $info;
}

/**
 * Implements hook_menu().
 */
function sample_blog_menu() {
  $items['blogs'] = array(
    'title' => 'Blogs',
    'page callback' => 'sample_blog_view_blogs',
    'access arguments' => array('access content'),
  );

  $items['blog/%blog_types'] = array(
    'title' => 'Blog',
    'page callback' => 'sample_blog_view_blog',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
  );

  return $items;
}


/**
 * Access callback for blog entities.
 */
function sample_blog_permission() {
  return array(
    'administer blogs' => array(
      'title' => t('Administer Blog posts'),
    ),
  );
}

/**
 * Access callback for blog entities.
 */
function sample_blog_access_callback($op, $blog = NULL, $account = NULL) {
  if (user_access('administer blogs', $account)) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * Menu autoloader for blogs.
 */
function blog_types_load($bid) {
  if (!is_numeric($bid)) {
    return FALSE;
  }
  $blog = entity_load_single('blog_types', $bid);
  return $blog;
}

/**
 * Implements hook_form().
 */
function blog_types_form($form, &$form_state, $blog = NULL) {

  $form['title'] = array(
    '#title' => t('Blog title'),
    '#type' => 'textfield',
    '#default_value' => isset($blog->title) ? $blog->title : '',
    '#required' => TRUE,
  );

  field_attach_form('blog_types', $blog, $form, $form_state);

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => isset($blog->id) ? t('Update blog') : t('Save blog'),
    '#weight' => 50,
  );

  return $form;
}

/**
 * Submit handler for the blog add/edit form.
 */
function blog_types_form_submit($form, &$form_state) {
  global $user;

  $blog = entity_ui_form_submit_build_entity($form, $form_state);

  if (!isset($blog->bid)) {
    $blog->created = REQUEST_TIME;
  }

  $blog->uid = $user->uid;
  $blog->changed = REQUEST_TIME;
  $blog->type = 'blog_types';

  $blog->save();
  drupal_set_message(t('The blog: @title has been saved.', array('@title' => $blog->title)));
  $form_state['redirect'] = 'admin/blogs';
}

/**
 * Callback for viewing a blog page.
 *
 * @return bool
 */
function sample_blog_view_blog($blog) {
  drupal_set_title($blog->title);
  $output = entity_view('blog_types', array($blog));

  return $output;
}

/**
 * Blog entity class extending the Entity class
 */
class BlogEntity extends Entity {

  /**
   * Change the default URI from default/id to Blog/id
   */
  protected function defaultUri() {
    return array('path' => 'blog/' . $this->identifier());
  }

}

/**
 * Callback function to display list of blogs for unauthenticated users.
 */
function sample_blog_view_blogs() {
  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'blog_types')
    ->pager(10);

  $results = $query->execute();

  $content = entity_view('blog_types', entity_load('blog_types', array_keys($results['blog_types'])));

  $build = array(
    'content' => $content,
    'pager' => array(
      '#markup' => theme('pager'),
      '#weight' => 10
    )
  );

  return $build;
}
