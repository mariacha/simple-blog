<?php
/**
 * @file
 * Install, update and uninstall functions for the sample blog module.
 */

/**
 * Implements hook_schema().
 */
function sample_blog_schema() {
  $schema['blog'] = array(
    'description' => 'A sample Blog entity type.',
    'fields' => array(
      'bid' => array(
        'description' => 'The primary identifier for a blog.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The bundle type of this blog.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'title' => array(
        'description' => 'The title of this blog entry, always treated as non-markup plain text.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The user that owns this node; initially, this is the user that created it.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the blog was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the blog was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'blog_changed'        => array('changed'),
      'blog_created'        => array('created'),
      'blog_title_type'     => array('title', array('type', 4)),
      'uid'                 => array('uid'),
    ),
    'foreign keys' => array(
      'blog_author' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
    'primary key' => array('bid'),
  );

  return $schema;
}

/**
 * Implements hook_enable().
 */
function sample_blog_enable() {
  // Check if our field is not already created.
  if (!field_info_field('field_blog_contents')) {
    $field = array(
      'active' => 1,
      'cardinality' => 1,
      'deleted' => 0,
      'entity_types' => array(),
      'field_name' => 'field_blog_contents',
      'indexes' => array(
        'format' => array(
          0 => 'format',
        ),
      ),
      'locked' => 0,
      'module' => 'text',
      'settings' => array(),
      'translatable' => 0,
      'type' => 'text_with_summary',
    );
    field_create_field($field);

    // Create the instance on the bundle.
    $instance = array(
      'bundle' => 'blog_types',
      'default_value' => NULL,
      'deleted' => 0,
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'module' => 'text',
          'settings' => array(
            'trim_length' => 600,
          ),
          'type' => 'text_summary_or_trimmed',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'blog_types',
      'field_name' => 'field_blog_contents',
      'label' => 'Blog contents',
      'required' => 0,
      'settings' => array(
        'display_summary' => 1,
        'text_processing' => 1,
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'rows' => 20,
          'summary_rows' => 5,
        ),
        'type' => 'text_textarea_with_summary',
        'weight' => 2,
      ),
    );
    field_create_instance($instance);
  }

  module_load_include('inc', 'sample_blog', 'sample_blog.install');
  _sample_blog_create_demo_content();
}

/**
 * Implements hook_disable().
 */
function sample_blog_disable() {
  // Delete sample contents.
  $contents_to_delete = variable_get('sample_blog_sample_data', array());

  entity_delete_multiple('blog_types', $contents_to_delete);
}

/**
 * Implements hook_uninstall().
 */
function sample_blog_uninstall() {
  // Delete field instances.
  $instances = field_info_instances('blog_types');
  foreach ($instances as $instance_name => $instance) {
    field_delete_field($instance);
    field_purge_batch(1);
  }

  if (db_table_exists('blog')) {
    db_query('drop table {blog}');
  }
  if (db_table_exists('field_revision_field_blog_contents')) {
    db_query('drop table {field_revision_field_blog_contents}');
  }
  if (db_table_exists('field_data_field_blog_contents')) {
    db_query('drop table {field_data_field_blog_contents}');
  }

  db_delete('field_config')->condition('field_name', 'field_blog_contents')->execute();
  db_delete('field_config_instance')->condition('entity_type', 'blog_types')->execute();
}
