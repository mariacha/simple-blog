<?php
/**
 * @file
 * Install, update and uninstall functions for the sample blog module.
 */

/**
 * Implements hook_schema().
 */
function sample_blog_schema() {
  $schema['blog'] = array(
    'description' => 'A sample Blog entity type.',
    'fields' => array(
      'bid' => array(
        'description' => 'The primary identifier for a blog.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The bundle type of this blog.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'title' => array(
        'description' => 'The title of this blog entry, always treated as non-markup plain text.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The user that owns this node; initially, this is the user that created it.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the blog was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the blog was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'blog_changed'        => array('changed'),
      'blog_created'        => array('created'),
      'blog_title_type'     => array('title', array('type', 4)),
      'uid'                 => array('uid'),
    ),
    'foreign keys' => array(
      'blog_author' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
    'primary key' => array('bid'),
  );

  return $schema;
}

/**
 * Implements hook_enable().
 */
function sample_blog_enable() {
  // Check if our field is not already created.
  if (!field_info_field('field_blog_contents')) {
    $field = array(
      'active' => 1,
      'cardinality' => 1,
      'deleted' => 0,
      'entity_types' => array(),
      'field_name' => 'field_blog_contents',
      'indexes' => array(
        'format' => array(
          0 => 'format',
        ),
      ),
      'locked' => 0,
      'module' => 'text',
      'settings' => array(),
      'translatable' => 0,
      'type' => 'text_with_summary',
    );
    field_create_field($field);

    // Create the instance on the bundle.
    $instance = array(
      'bundle' => 'blog_types',
      'default_value' => NULL,
      'deleted' => 0,
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'module' => 'text',
          'settings' => array(),
          'type' => 'text_default',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'blog_types',
      'field_name' => 'field_blog_contents',
      'label' => 'Blog contents',
      'required' => 0,
      'settings' => array(
        'display_summary' => 0,
        'text_processing' => 1,
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'rows' => 20,
          'summary_rows' => 5,
        ),
        'type' => 'text_textarea_with_summary',
        'weight' => 2,
      ),
    );
    field_create_instance($instance);
  }

  $demo_content_entities = array();

  $entity_type = 'blog_types';
  $entity = entity_create($entity_type, array('type' => 'blog_types'));
  $wrapper = entity_metadata_wrapper($entity_type, $entity);

  $entity->title = 'First post';
  $wrapper->field_blog_contents->value = 'Dragée ice cream cotton candy croissant chocolate bar muffin macaroon halvah oat cake. Fruitcake danish wafer lemon drops. Croissant oat cake cookie carrot cake biscuit. Lollipop icing sweet danish candy croissant. Pudding croissant chupa chups jujubes danish jelly-o gummi bears. Dragée cotton candy cheesecake. Tiramisu caramels chocolate bar lollipop cookie. Chocolate gummies gummi bears gummi bears topping biscuit biscuit pie. Candy canes icing marzipan sweet candy canes sweet cake cake. Gummi bears cheesecake ice cream sweet muffin cake ice cream candy. Ice cream pudding pudding chocolate bar topping chocolate bar marzipan biscuit. Wafer dessert bear claw cheesecake pie tootsie roll tootsie roll halvah. Pastry danish icing pie halvah chocolate tootsie roll.';
  $wrapper->field_blog_contents->summary = 'Dragée ice cream cotton candy croissant chocolate bar!';
  $wrapper->save();
  $demo_content_entities[] = $wrapper->getIdentifier();

  $entity = entity_create($entity_type, array('type' => 'blog_types'));
  $wrapper = entity_metadata_wrapper($entity_type, $entity);
  $entity->title = 'Second post';
  $wrapper->field_blog_contents->value = 'Sesame snaps chupa chups cookie tiramisu icing dessert candy jelly toffee. Tart soufflé tart bear claw dessert lollipop biscuit carrot cake dessert. Icing marzipan cake sweet. Jelly-o icing croissant marshmallow dessert pastry liquorice brownie ice cream. Marshmallow cake jelly beans pudding candy toffee jelly-o cheesecake chocolate. Cotton candy cookie lemon drops gummies. Topping fruitcake pie sugar plum chocolate bar marzipan carrot cake candy canes muffin. Chocolate chupa chups chocolate cake carrot cake biscuit. Cake croissant marshmallow. Icing sesame snaps cookie pudding oat cake chocolate cake lollipop bear claw. Chocolate cake icing chocolate bar croissant. Cake biscuit marzipan topping.';
  $wrapper->field_blog_contents->summary = 'Sesame snaps chupa chups cookie tiramisu icing!';
  $wrapper->save();
  $demo_content_entities[] = $wrapper->getIdentifier();

  $entity = entity_create($entity_type, array('type' => 'blog_types'));
  $wrapper = entity_metadata_wrapper($entity_type, $entity);
  $entity->title = 'Third post';
  $wrapper->field_blog_contents->value = 'Candy dessert sweet oat cake fruitcake jelly beans tootsie roll. Wafer candy tiramisu danish. Chupa chups cake pudding icing tiramisu marzipan jelly beans sesame snaps. Cookie toffee candy canes cotton candy chocolate fruitcake gummies wafer gummi bears. Caramels caramels donut oat cake topping cookie chocolate cake bonbon wafer. Chocolate bar tiramisu toffee halvah bear claw marshmallow tiramisu. Cotton candy fruitcake apple pie ice cream cotton candy danish cookie. Carrot cake halvah wafer pie candy canes sugar plum bonbon toffee. Pastry gummi bears jelly beans brownie gummi bears cotton candy gummies jujubes. Chocolate jelly oat cake gummi bears donut sweet roll. Sesame snaps powder bear claw chocolate. Sweet roll ice cream macaroon dessert chocolate cake toffee.';
  $wrapper->field_blog_contents->summary = 'Candy dessert sweet oat cake fruitcake jelly beans tootsie roll!';
  $wrapper->save();
  $demo_content_entities[] = $wrapper->getIdentifier();

  variable_set('sample_blog_sample_data', $demo_content_entities);
}

/**
 * Implements hook_disable().
 */
function sample_blog_disable() {
  // Delete sample contents.
  $contents_to_delete = variable_get('sample_blog_sample_data', array());

  entity_delete_multiple('blog_types', $contents_to_delete);
}

/**
 * Implements hook_uninstall().
 */
function sample_blog_uninstall() {
  // Delete field instances.
  $instances = field_info_instances('blog_types');
  foreach ($instances as $instance_name => $instance) {
    field_delete_field($instance);
    field_purge_batch(1);
  }

  if (db_table_exists('blog')) {
    db_query('drop table {blog}');
  }
  if (db_table_exists('field_revision_field_blog_contents')) {
    db_query('drop table {field_revision_field_blog_contents}');
  }
  if (db_table_exists('field_data_field_blog_contents')) {
    db_query('drop table {field_data_field_blog_contents}');
  }

  db_delete('field_config')->condition('field_name', 'field_blog_contents')->execute();
  db_delete('field_config_instance')->condition('entity_type', 'blog_types')->execute();
}
